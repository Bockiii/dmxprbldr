name: 'PR Testing'

on:
  workflow_dispatch:  # click the button on Github repo!
  pull_request:
    branches: [ main ]

jobs:
  test-pr:
    name: Test PR
    runs-on: ubuntu-latest
    # This uses a fixed PR for testing. Will use ${{github.event.number}} in combination with the PR trigger in finished form.
    # See https://github.com/actions/checkout/issues/58#issuecomment-663103947
    steps:
      - name: Check out self
        uses: actions/checkout@v2.3.2
      - name: Check out rss-bridge
        run: |
          PR=2522;
          mv .github/prtester-requirements.txt ./requirements.txt;
          mv .github/prtester.py .;
          git clone https://github.com/RSS-Bridge/rss-bridge.git --depth 1;
          cd rss-bridge;
          wget https://patch-diff.githubusercontent.com/raw/RSS-Bridge/rss-bridge/pull/$PR.patch;
          cat $PR.patch | patch -p1;
          cat $PR.patch | grep " bridges/.*\.php" | sed "s= bridges/\(.*\)Bridge.php.*=\1=g" | sort | uniq > whitelist.txt
      - name: Start Docker - Current
        run: |
          docker run -d -v $GITHUB_WORKSPACE/rss-bridge/whitelist.txt:/app/whitelist.txt -p 3000:80 ghcr.io/rss-bridge/rss-bridge:latest
      - name: Start Docker - PR
        run: |
          docker build -t prbuild $GITHUB_WORKSPACE/rss-bridge/;
          docker run -d -v $GITHUB_WORKSPACE/rss-bridge/whitelist.txt:/app/whitelist.txt -p 3001:80 prbuild
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          cache: 'pip'
      - name: Install requirements
        run: |
          cd $GITHUB_WORKSPACE
          pip install -r requirements.txt
      - name: Run bridge tests
        id: testrun
        run: |
          mkdir results;
          python prtester.py;
          body="$(cat comment.txt)";
          body="${body//'%'/'%25'}";
          body="${body//$'\n'/'%0A'}";
          body="${body//$'\r'/'%0D'}";
          echo "::set-output name=body::$body"
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Pull request artifacts
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ steps.testrun.outputs.body }}
          edit-mode: replace